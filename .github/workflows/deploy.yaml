name: AWS ECR Deploy
on:
  push:
    branches:
      - lambda

permissions:
  id-token: write

jobs:
  build-native-image:
    name: Build backend native image and deploy to ECR
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

#      - name: Set up JDK GraalVM
#        uses: graalvm/setup-graalvm@v1
#        with:
#          java-version: '21'
#          distribution: 'graalvm'

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Log into DockerHub
        uses: docker/login-action@v3
        with:
          username: emmanuelu17
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image for ECR
        run: docker build -t server-graalvm21:native-web -f Dockerfile.ecr . --progress=plain

      # https://github.com/aws-actions/amazon-ecr-login
      - name: Tag, and push image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: server-graalvm21
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker image tag server-graalvm21:native-web $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
